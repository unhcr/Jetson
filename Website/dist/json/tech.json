{"id":29889,"date":"2019-07-30T19:10:15","date_gmt":"2019-07-30T17:10:15","guid":{"rendered":"https:\/\/www.unhcr.org\/innovation\/?page_id=29889"},"modified":"2019-08-03T19:12:38","modified_gmt":"2019-08-03T17:12:38","slug":"jetson-technical-specifications","status":"publish","type":"page","link":"https:\/\/www.unhcr.org\/innovation\/jetson-technical-specifications\/","title":{"rendered":"Jetson Technical Specifications"},"content":{"rendered":"","protected":false},"excerpt":{"rendered":"","protected":false},"author":10,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"acf":{"technical_specs_intro":"<p>Discover the technical specifications of UNHCR\u2019s first predictive analytics experiment, from the datasets format to our code\u2019s repositories. This section is intended to describe the steps taken to create a humanitarian predictive analytics project, with applied computer science research, as well as the steps taken to develop and improve the experiment.<\/p>\n","sections":[{"acf_fc_layout":"text_section","title":"About the Data","text":"<p><b>Open Data<\/b><\/p>\n<p>The main central component of a predictive analytics project is open data. Open data as defined by <a href=\"http:\/\/opendatahandbook.org\/glossary\/en\/terms\/open-data\/\">Open Data Handbook <\/a>is data that is legally open and technically open.<\/p>\n<p>In the case of Jetson, legally open data refers to the datasets that partners share either:<\/p>\n<ul>\n<li>Publicly on their websites or in a humanitarian data broker website (e.g. <a href=\"https:\/\/data.humdata.org\/\">OCHA HDX<\/a>)<\/li>\n<li>Bilaterally shared, derived from the principle of international cooperation (e.g. operational data shared on a joint-service or research between UN System agencies)<\/li>\n<li>Via formal\/legal data sharing agreement (e.g. Memorandum of Understanding, MoU or similar agreements).<\/li>\n<\/ul>\n<p>Technically open data for the project is data that is a machine-readable format (ideally a tabular format, csv, json, xls) and\/or that has a public API to be extracted automatically, with a certain time periodicity which, in the case of Project Jetson is every month.<\/p>\n<p>Having these two main components is difficult in areas where there is no humanitarian access due to violent conflict or other reasons or that time\/resource capacity to collect is limited or completely non-existent. These are some of the greatest data challenges of the humanitarian sector vis-\u00e0-vis other sectors to have datasets ready for predictive analysis.<\/p>\n<p><b>Data Protection<\/b><\/p>\n<p>Additionally, and given the nature of our organizational mandate, all the datasets used in this experiment have been anonymized and aggregated in order to comply with <a href=\"https:\/\/www.refworld.org\/pdfid\/55643c1d4.pdf\">UNHCR data protection policy<\/a>. For this reason, the scripts and API calls are only referring to the anonymized and aggregated copy of the original datasets.<\/p>\n<p>The original datasets &#8211; as provided by the partners with their respective data protection clauses &#8211; are intact and stored in a UNHCR internal corporate repositories. They can be deleted at any time by the request of the respective data providers.<\/p>\n<p>Nevertheless, and conscious of the aforementioned limitations, our partners and data sources have been key in the development of this experiment by providing us with either timely and open data or by publishing their data in their respective websites. Additionally, they have provided us with advice on improvements on methodology and techniques to conduct our experiment.<\/p>\n","section_style":"off_grey","section_class":""},{"acf_fc_layout":"text_section","title":"Jetson Data","text":"<p>The variables selected to conduct this experiment, represent the main influencers of the different regions of population movement. In order to select what variables to input into Jetson experiment, several steps from innovation methodologies were taken. For example, using the principles of <a href=\"https:\/\/www.ideo.org\/approach\">human-centered design,<\/a> variables were selected according to different reasons such as:<\/p>\n<ul>\n<li>Were originally assumed by conducting an initial literature review of the operational context<\/li>\n<li>Were suggested by UNHCR staff and\/or the field operation with extensive field experience in that particular region<\/li>\n<li>Were suggested by persons of concern themselves, <a href=\"https:\/\/medium.com\/unhcr-innovation-service\/a-goat-story-3ed6bdd2b237\">particularly refugees<\/a><\/li>\n<\/ul>\n<p>According to them, the most influential (dependent) variables &#8211; and therefore the datasets collected &#8211; to understand forced displacement from Somalia are:<\/p>\n<ul>\n<li><b>Violent conflict:<\/b> is defined in<a href=\"https:\/\/www.acleddata.com\/wp-content\/uploads\/dlm_uploads\/2017\/10\/ACLED_Codebook_2019FINAL_pbl.pdf\"> ACLED codebook &#8211;<\/a> which is one of the main violent conflict data sources in the region. We included all the violent events and demonstrations or in other words excluded all non-violent actions (event type: strategic developments). We used two main variables from this data source: the sum amount of violent incidents per month per region and the amount of fatalities (deaths) per month per region.\u00a0 ACLED is the only data source for Jetson with a public API, and the call for violent conflict (e.g. incidents) would be the following:<\/li>\n<\/ul>\n<p>acled_incidents = acled[(acled.event_type!=&#8221;Strategic developments&#8221;).groupby([&#8220;admin1&#8221;, &#8216;month_year&#8217;]).count()[[&#8216;data_id&#8217;]]<\/p>\n<ul>\n<li><b>Climate &amp; Weather anomalies<\/b>: climate and weather predictive analytics is a rigorous science with many meteorology and environmentally-based methods. In order for us to keep the experiment as simple as possible we analysed two main variables, as a proxy for climate and weather anomalies considering that they are some of the main weather\/climate anomalies that disrupt livelihoods in the region:\n<ul>\n<li><i>Rain patterns<\/i>: provided to us by <a href=\"http:\/\/www.faoswalim.org\/\">FAO SWALIM team,<\/a> originally <a href=\"http:\/\/sddr.faoswalim.org\/\">publicly available in this site<\/a>, later on shared to us via email (excel tables with gauge sensors data).<\/li>\n<li><i>River levels<\/i>: publicly available data by FAO SWALIM we originally built a parser for extracting the data from the<a href=\"http:\/\/frrims.faoswalim.org\/rivers\/levels\"> river level graphs.<\/a><\/li>\n<\/ul>\n<\/li>\n<li><b>Market prices<\/b>: were suggested to be included in this experiment by refugees themselves <a href=\"https:\/\/medium.com\/unhcr-innovation-service\/a-goat-story-3ed6bdd2b237\">via key informant interviews<\/a>. They highlighted the importance of two commodities for their livelihoods: water drum prices and [local] goat market prices, this latter being a proxy for movement. This is due to the fact that refugees stated that goats are a sensitive product to extreme weather conditions. Prior fleeing they sell them in order to their trip\/tribe dying on the road due to lack of water or pasture to feed on. This creates a ripple effect on the local market of supply\/demand for the local commodity. The market prices are collected by <a href=\"http:\/\/www.fsnau.org\/ids\/index.php?msg=You%20tried%20to%20access%20the%20IDS%20without%20logging%20in%20first.%20Please%20log%20in%20below:\">FAO FSNAU team.<\/a><\/li>\n<\/ul>\n<p>Recently, FAO SWALIM and FSNAU teams joined forces and collated the climate, weather and market datasets datasets together in a single dashboard (registration required):\u00a0 <a href=\"http:\/\/dashboard.fsnau.org\/\">FAO FSNAU Early Warning\/Early Action in Somalia<\/a><\/p>\n<p>And of course, the target variable (independent variable, y) which is:<\/p>\n<ul>\n<li><b>Forced displacement: <\/b><a href=\"https:\/\/unhcr.github.io\/dataviz-somalia-prmn\/index.html\">internal displacement<\/a> collected by UNHCR-Protection and Return Monitoring Network (PRMN) partnership within Somalia and<a href=\"https:\/\/data2.unhcr.org\/en\/situations\/horn\/location\/161\"> cross-border refugee movement <\/a>, using registration data from UNHCR Dollo Ado team in Ethiopia.<\/li>\n<\/ul>\n","section_style":"white","section_class":""},{"acf_fc_layout":"text_section","title":"Jetson Command:  Introduction to technical specs","text":"<p>Jetson development is divided into five different components:<\/p>\n<ol>\n<li><b><i>Data<\/i><\/b>: the data is the main component of the project. Jetson datasets represent the collection effort of both humanitarian and development sector partners to gather evidence on the different variables that could influence forced displacement in the Somali context. They are a recollection of seven years of the different variables datasets, aggregated and anonymized on a monthly basis presented in a time-series format. More information about the type of datasets and the different variables in the <b>About the Data Section.\u00a0<\/b>The width of the dataset is 153 different variables and the length is the total of years times the number of months (e.g. from January 2010 until June 2017, is 90).<\/li>\n<li><b><i>Modeling applications<\/i><\/b>: this is a flexible component in Jetson and it varies depending on data protection requirements. We have tested both open-source and also out-of-the-box (including licensed software) applications for modeling purposes. The application minimum five tech specs are:\n<ol>\n<li>Supports integration with tabular applications (e.g. excel\/google sheets) and has a python\/JS\/R API;<\/li>\n<li>Ability to conduct multivariate time series forecasting, defining time lags, and windows of time to perform machine learning of the past and project to future values.<\/li>\n<li>Possibility to run predictions both locally (for data security purposes, small scale testing) as well as run them in the cloud;<\/li>\n<li>Contains fairly good interpretability elements to understand machine calculations [and avoid the A.I. black-box concept] and;<\/li>\n<li>Ideally, that has a \u2018feedback loop\u2019 element, this means that with new inputs in data, the machine adapts the new data points into the future predictions.<\/li>\n<\/ol>\n<\/li>\n<\/ol>\n<h4>Experiment #1: predicting one-month in advance<\/h4>\n<p><b>Data: <\/b>same datasets (see About Data section)<\/p>\n<p><b><br \/>\n<\/b><b>Modelling applications: <\/b>we utilized a combination for this experiment Eureqa (modeling app) + optimus prime (interpretability) + R-shiny (visualization)<\/p>\n<ul>\n<li><i>Eureqa<\/i>: non-deterministic models based on genetic and evolutionary algorithms, a tool developed by Cornell\u2019s Artificial Intelligence team. For the software to start evaluating solutions, different parameters have to be defined and the data to be inserted in the system on a clean and targeted way.<\/li>\n<li><i>Python apps<\/i>: Optimus prime (optimus.py): A \u201ctranslator\u201d for the eureqa output to an R function that grabs the date needed to produce the \u201cforecasted\u201d value. This part was more dedicated to automation, resulting in predictions for all the regions for all the models produced by Eureqa.<\/li>\n<li><i>R-Shiny apps:<\/i> modeler.R, engine.R: A visual way to view the predictions, per region for the models that are performing the best.<\/li>\n<\/ul>\n<p><b>Data Preparation: Inputs for the machine<\/b><\/p>\n<p><b>Building functions for modelling<\/b><\/p>\n<p>For testing the different applications we have built tested several functions with different lags and and\/or different combinations of variables (e.g. eliminating some to have a less lengthy processing time) for modelling purposes.<\/p>\n<p><b>Lags<\/b><\/p>\n<p>We produced 2 functions for each region, one function with a minus -1 lag (one month in advance prediction) and one function with minus -2 lag. This is a total of 36 functions: one with minus-1 and another one with minus-2, corresponding to each region of Somalia (18 regions), plus Dollo Ado counted as 1 region (\u201cregion\u201d 19).<\/p>\n<p>Example of one minus-1 function (Lower Juba Region, 1 month lag):<\/p>\n<p><b>Jubbada_Hoose_CurrentRegion <\/b>= f(delay(Awdal_Conflict, 1), delay(Bakool_Conflict, 1), delay(Banadir_Conflict, 1), delay(Bari_Conflict, 1), delay(Bay_Conflict, 1), delay(Galgaduud_Conflict, 1), delay(Gedo_Conflict, 1), delay(Hiiraan_Conflict, 1), delay(Jubbada_Dhexe_Conflict, 1), delay(Jubbada_Hoose_Conflict, 1), delay(Mudug_Conflict, 1), delay(Nugaal_Conflict, 1), delay(Sanaag_Conflict, 1), delay(Shabeellaha_Dhexe_Conflict, 1), delay(Shabeellaha_Hoose_Conflict, 1), delay(Sool_Conflict, 1), delay(Togdheer_Conflict, 1), delay(Woqooyi_Galbeed_Conflict, 1), delay(Awdal_Fatalities, 1), delay(Bakool_Fatalities, 1), delay(Banaadir_Fatalities, 1), delay(Bari_Fatalities, 1), delay(Bay_Fatalities, 1), delay(Galguduud_Fatalities, 1), delay(Gedo_Fatalities, 1), delay(Hiiraan_Fatalities, 1), delay(Jubbada_Dhexe_Fatalities, 1), delay(Jubbada_Hoose_Fatalities, 1), delay(Mudug_Fatalities, 1), delay(Nugaal_Fatalities, 1), delay(Sanaag_Fatalities, 1), delay(Shabeellaha_Dhexe_Fatalities, 1), delay(Shabeellaha_Hoose_Fatalities, 1), delay(Sool_Fatalities, 1), delay(Togdheer_Fatalities, 1), delay(Woqooyi_Galbeed_Fatalities, 1), delay(Awdal_BeforeRegion, 1), delay(Bakool_BeforeRegion, 1), delay(Banadir_BeforeRegion, 1), delay(Bari_BeforeRegion, 1), delay(Bay_BeforeRegion, 1), delay(Galgaduud_BeforeRegion, 1), delay(Gedo_BeforeRegion, 1), delay(Hiiraan_BeforeRegion, 1), delay(Jubbada_Dhexe_BeforeRegion, 1), delay(Jubbada_Hoose_BeforeRegion, 1), delay(Mudug_BeforeRegion, 1), delay(Nugaal_BeforeRegion, 1), delay(Sanaag_BeforeRegion, 1), delay(Shabeellaha_Dhexe_BeforeRegion, 1), delay(Shabeellaha_Hoose_BeforeRegion, 1), delay(Sool_BeforeRegion, 1), delay(Togdheer_BeforeRegion, 1), delay(Woqooyi_Galbeed_BeforeRegion, 1), delay(Awdal_FutureRegion, 1), delay(Bakool_FutureRegion, 1), delay(Banadir_FutureRegion, 1), delay(Bari_FutureRegion, 1), delay(Bay_FutureRegion, 1), delay(Galgaduud_FutureRegion, 1), delay(Gedo_FutureRegion, 1), delay(Hiiraan_FutureRegion, 1), delay(Jubbada_Dhexe_FutureRegion, 1), delay(Jubbada_Hoose_FutureRegion, 1), delay(Mudug_FutureRegion, 1), delay(Nugaal_FutureRegion, 1), delay(Sanaag_FutureRegion, 1), delay(Shabeallaha_Dhexe_FutureRegion, 1), delay(Shabeellaha_Hoose_FutureRegion, 1), delay(Sool_FutureRegion, 1), delay(Togdheer_FutureRegion, 1), delay(Woqooyi_Galbeed_FutureRegion, 1), delay(Juba_River_discharge, 1), delay(Shabelle_River_discharge, 1), delay(Hiiraan_Belet_WeyneStation_Shabelle_River, 1), delay(Hiiraan_Bulo_Burti_StationShabelle_River, 1), delay(Shabelle_Dhexe_JowharStation_Shabelle_River, 1), delay(Juba_Dhexe_BualleStation_Juba_River, 1), delay(Gedo_BardheereStation_Juba_River, 1), delay(Gedo_LuuqStation_Juba_River, 1), delay(Gedo_DollowStation_Juba_River, 1), delay(Awdal_WaterDrumPrice, 1), delay(Bakool_WaterDrumPrice, 1), delay(Banadir_WaterDrumPrice, 1), delay(Bari_WaterDrumPrice, 1), delay(Bay_WaterDrumPrice, 1), delay(Galgaduud_WaterDrumPrice, 1), delay(Gedo_WaterDrumPrice, 1), delay(Hiiraan_WaterDrumPrice, 1), delay(Jubbada_Dhexe_WaterDrumPrice, 1), delay(Jubbada_Hoose_WaterDrumPrice, 1), delay(Mudug_WaterDrumPrice, 1), delay(Nugaal_WaterDrumPrice, 1), delay(Sanaag_WaterDrumPrice, 1), delay(Shabeallaha_Dhexe_WaterDrumPrice, 1), delay(Shabeellaha_Hoose_WaterDrumPrice, 1), delay(Sool_WaterDrumPrice, 1), delay(Togdheer_WaterDrumPrice, 1), delay(Woqooyi_Galbeed_WaterDrumPrice, 1), delay(Awdal_goatprice, 1), delay(Bakool_goatprice, 1), delay(Banadir_goatprice, 1), delay(Bari_goatprice, 1), delay(Bay_goatprice, 1), delay(Galgaduud_goatprice, 1), delay(Gedo_goatprice, 1), delay(Hiiraan_goatprice, 1), delay(Jubbada_Dhexe_goatprice, 1), delay(Jubbada_Hoose_goatprice, 1), delay(Mudug_goatprice, 1), delay(Nugaal_goatprice, 1), delay(Sanaag_goatprice, 1), delay(Shabeallaha_Dhexe_goatprice, 1), delay(Shabeellaha_Hoose_goatprice, 1), delay(Sool_goatprice, 1), delay(Togdheer_goatprice, 1), delay(Woqooyi_Galbeed_goatprice, 1), delay(Awdal_rain, 1), delay(Bakool_rain, 1), delay(Banaadir_rain, 1), delay(Bari_rain, 1), delay(Bay_rain, 1), delay(Gedo_rain, 1), delay(Hiiraan_rain, 1), delay(Jubbada_Dhexe_rain, 1), delay(Jubbada_Hoose_rain, 1), delay(Mudug_rain, 1), delay(Nugaal_rain, 1), delay(Sanaag_rain, 1), delay(Shabeellaha_Dhexe_rain, 1), delay(Shabeellaha_Hoose_rain, 1), delay(Sool_rain, 1), delay(Togdheer_rain, 1), delay(Woqooyi_Galbeed_rain, 1), delay(Awdal_CurrentRegion, 1), delay(Bakool_CurrentRegion, 1), delay(Banadir_CurrentRegion, 1), delay(Bari_CurrentRegion, 1), delay(Bay_CurrentRegion, 1), delay(Galgaduud_CurrentRegion, 1), delay(Gedo_CurrentRegion, 1), delay(Hiiraan_CurrentRegion, 1), delay(Jubbada_Dhexe_CurrentRegion, 1), delay(Mudug_CurrentRegion, 1), delay(Nugaal_CurrentRegion, 1), delay(Sanaag_CurrentRegion, 1), delay(Sool_CurrentRegion, 1), delay(Togdheer_CurrentRegion, 1), delay(Woqooyi_Galbeed_CurrentRegion, 1), delay(Shabeellaha_Hoose_CurrentRegion, 1), delay(Shabeellaha_Dhexe_CurrentRegion, 1))<\/p>\n<p>Example of one minus-2 function (Lower Juba Region, 2 month lag):<\/p>\n<p>Jubbada_Hoose_CurrentRegion = f(delay(Awdal_Conflict, 2), delay(Bakool_Conflict, 2), delay(Banadir_Conflict, 2), delay(Bari_Conflict, 2), delay(Bay_Conflict, 2), delay(Galgaduud_Conflict, 2), delay(Gedo_Conflict, 2), delay(Hiiraan_Conflict, 2), delay(Jubbada_Dhexe_Conflict, 2), delay(Jubbada_Hoose_Conflict, 2), delay(Mudug_Conflict, 2), delay(Nugaal_Conflict, 2), delay(Sanaag_Conflict, 2), delay(Shabeellaha_Dhexe_Conflict, 2), delay(Shabeellaha_Hoose_Conflict, 2), delay(Sool_Conflict, 2), delay(Togdheer_Conflict, 2), delay(Woqooyi_Galbeed_Conflict, 2), delay(Awdal_Fatalities, 2), delay(Bakool_Fatalities, 2), delay(Banaadir_Fatalities, 2), delay(Bari_Fatalities, 2), delay(Bay_Fatalities, 2), delay(Galguduud_Fatalities, 2), delay(Gedo_Fatalities, 2), delay(Hiiraan_Fatalities, 2), delay(Jubbada_Dhexe_Fatalities, 2), delay(Jubbada_Hoose_Fatalities, 2), delay(Mudug_Fatalities, 2), delay(Nugaal_Fatalities, 2), delay(Sanaag_Fatalities, 2), delay(Shabeellaha_Dhexe_Fatalities, 2), delay(Shabeellaha_Hoose_Fatalities, 2), delay(Sool_Fatalities, 2), delay(Togdheer_Fatalities, 2), delay(Woqooyi_Galbeed_Fatalities, 2), delay(Awdal_BeforeRegion, 2), delay(Bakool_BeforeRegion, 2), delay(Banadir_BeforeRegion, 2), delay(Bari_BeforeRegion, 2), delay(Bay_BeforeRegion, 2), delay(Galgaduud_BeforeRegion, 2), delay(Gedo_BeforeRegion, 2), delay(Hiiraan_BeforeRegion, 2), delay(Jubbada_Dhexe_BeforeRegion, 2), delay(Jubbada_Hoose_BeforeRegion, 2), delay(Mudug_BeforeRegion, 2), delay(Nugaal_BeforeRegion, 2), delay(Sanaag_BeforeRegion, 2), delay(Shabeellaha_Dhexe_BeforeRegion, 2), delay(Shabeellaha_Hoose_BeforeRegion, 2), delay(Sool_BeforeRegion, 2), delay(Togdheer_BeforeRegion, 2), delay(Woqooyi_Galbeed_BeforeRegion, 2), delay(Awdal_FutureRegion, 2), delay(Bakool_FutureRegion, 2), delay(Banadir_FutureRegion, 2), delay(Bari_FutureRegion, 2), delay(Bay_FutureRegion, 2), delay(Galgaduud_FutureRegion, 2), delay(Gedo_FutureRegion, 2), delay(Hiiraan_FutureRegion, 2), delay(Jubbada_Dhexe_FutureRegion, 2), delay(Jubbada_Hoose_FutureRegion, 2), delay(Mudug_FutureRegion, 2), delay(Nugaal_FutureRegion, 2), delay(Sanaag_FutureRegion, 2), delay(Shabeallaha_Dhexe_FutureRegion, 2), delay(Shabeellaha_Hoose_FutureRegion, 2), delay(Sool_FutureRegion, 2), delay(Togdheer_FutureRegion, 2), delay(Woqooyi_Galbeed_FutureRegion, 2), delay(Juba_River_discharge, 2), delay(Shabelle_River_discharge, 2), delay(Hiiraan_Belet_WeyneStation_Shabelle_River, 2), delay(Hiiraan_Bulo_Burti_StationShabelle_River, 2), delay(Shabelle_Dhexe_JowharStation_Shabelle_River, 2), delay(Juba_Dhexe_BualleStation_Juba_River, 2), delay(Gedo_BardheereStation_Juba_River, 2), delay(Gedo_LuuqStation_Juba_River, 2), delay(Gedo_DollowStation_Juba_River, 2), delay(Awdal_WaterDrumPrice, 2), delay(Bakool_WaterDrumPrice, 2), delay(Banadir_WaterDrumPrice, 2), delay(Bari_WaterDrumPrice, 2), delay(Bay_WaterDrumPrice, 2), delay(Galgaduud_WaterDrumPrice, 2), delay(Gedo_WaterDrumPrice, 2), delay(Hiiraan_WaterDrumPrice, 2), delay(Jubbada_Dhexe_WaterDrumPrice, 2), delay(Jubbada_Hoose_WaterDrumPrice, 2), delay(Mudug_WaterDrumPrice, 2), delay(Nugaal_WaterDrumPrice, 2), delay(Sanaag_WaterDrumPrice, 2), delay(Shabeallaha_Dhexe_WaterDrumPrice, 2), delay(Shabeellaha_Hoose_WaterDrumPrice, 2), delay(Sool_WaterDrumPrice, 2), delay(Togdheer_WaterDrumPrice, 2), delay(Woqooyi_Galbeed_WaterDrumPrice, 2), delay(Awdal_goatprice, 2), delay(Bakool_goatprice, 2), delay(Banadir_goatprice, 2), delay(Bari_goatprice, 2), delay(Bay_goatprice, 2), delay(Galgaduud_goatprice, 2), delay(Gedo_goatprice, 2), delay(Hiiraan_goatprice, 2), delay(Jubbada_Dhexe_goatprice, 2), delay(Jubbada_Hoose_goatprice, 2), delay(Mudug_goatprice, 2), delay(Nugaal_goatprice, 2), delay(Sanaag_goatprice, 2), delay(Shabeallaha_Dhexe_goatprice, 2), delay(Shabeellaha_Hoose_goatprice, 2), delay(Sool_goatprice, 2), delay(Togdheer_goatprice, 2), delay(Woqooyi_Galbeed_goatprice, 2), delay(Awdal_rain, 2), delay(Bakool_rain, 2), delay(Banaadir_rain, 2), delay(Bari_rain, 2), delay(Bay_rain, 2), delay(Gedo_rain, 2), delay(Hiiraan_rain, 2), delay(Jubbada_Dhexe_rain, 2), delay(Jubbada_Hoose_rain, 2), delay(Mudug_rain, 2), delay(Nugaal_rain, 2), delay(Sanaag_rain, 2), delay(Shabeellaha_Dhexe_rain, 2), delay(Shabeellaha_Hoose_rain, 2), delay(Sool_rain, 2), delay(Togdheer_rain, 2), delay(Woqooyi_Galbeed_rain, 2), delay(Awdal_CurrentRegion, 2), delay(Bakool_CurrentRegion, 2), delay(Banadir_CurrentRegion, 2), delay(Bari_CurrentRegion, 2), delay(Bay_CurrentRegion, 2), delay(Galgaduud_CurrentRegion, 2), delay(Gedo_CurrentRegion, 2), delay(Hiiraan_CurrentRegion, 2), delay(Jubbada_Dhexe_CurrentRegion, 2), delay(Mudug_CurrentRegion, 2), delay(Nugaal_CurrentRegion, 2), delay(Sanaag_CurrentRegion, 2), delay(Sool_CurrentRegion, 2), delay(Togdheer_CurrentRegion, 2), delay(Woqooyi_Galbeed_CurrentRegion, 2), delay(Shabeellaha_Hoose_CurrentRegion, 2), delay(Shabeellaha_Dhexe_CurrentRegion, 2))<\/p>\n<p><b>Building Training + Testing sets<\/b><\/p>\n<p>For the first experiment a total of 418 models were produced coming from\u00a0 22 per each region of Somalia (18 regions), plus Dollo Ado counted as 1 region (19 regions). From those 22, 21 were built with a minus -1 lag and, 1 was built with a minus -2 lag.<\/p>\n<p>How we built the training sets :<b> june 2017 or sep 2017\u00a0<\/b><\/p>\n<p>The <a href=\"https:\/\/docs.google.com\/spreadsheets\/d\/1qZsXGnEBaSIlhL8cfZhxswBmYN2E_VemRbYyqQTc-C0\/edit#gid=932134853\">evaluation of models<\/a> can be found here and the<a href=\"https:\/\/docs.google.com\/spreadsheets\/d\/1O2ZpYasL0O0DWYMCslv9N0s23Itk_EKUjexCbv_3jzU\/edit#gid=0\"> sensitive map<\/a> of the weights of different variables in the different regions can be found here.<\/p>\n<p>X <a href=\"https:\/\/docs.google.com\/spreadsheets\/d\/1qZsXGnEBaSIlhL8cfZhxswBmYN2E_VemRbYyqQTc-C0\/edit#gid=932134853\">missing app\/graph\/heatmap <\/a>\u00a0here<\/p>\n<p><i>Figure 4: Sensitivity Map, derived from functions most prevalent variables<\/i><\/p>\n<p><b><i>Transformation scripts<\/i><\/b>: the transformation scripts are a interpretability element for those applications who provide a model (function) as output of their calculations, like Eureqa. We built a\u00a0 python application, called optimus prime (optimus.py) to transform the function the model functions into prediction numbers in a time-series format, this means transforming a formula into numerical variables.<\/p>\n<p>Example of one model (function generated by the modelling application):<\/p>\n<p><b>Jubbada_Hoose_CurrentRegion <\/b>= max(max(delay(Nugaal_CurrentRegion, 7)*smm(delay(Togdheer_Conflict, 1), 6), max(smm(delay(Hiiraan_BeforeRegion, 1), 16)*log(wma(delay(Hiiraan_CurrentRegion, 1), 3)) + max(delay(Nugaal_CurrentRegion, 11), max(0.330162338655957*delay(Sool_Fatalities, 1)*mma(delay(Galgaduud_FutureRegion, 1), 3), sma(delay(Bay_rain, 1), 11)*smm(delay(Bay_rain, 1), 9))) &#8211; delay(Galgaduud_Conflict, 14)*wma(delay(Shabeellaha_Dhexe_rain, 1), 2), 6.04475718368644e-5*delay(Banadir_BeforeRegion, 1)*delay(Shabeellaha_Dhexe_BeforeRegion, 1))), wma(delay(Woqooyi_Galbeed_CurrentRegion, 1), 2))<\/p>\n<p>&nbsp;<\/p>\n<p>Output of transformation scripts (machine calculations):<\/p>\n<p>Figure 1:<i> Time-series formatted, machine calculations<\/i><\/p>\n<p><b>\u00a0Model Evaluation<\/b><\/p>\n<ol>\n<li><b><i>The Engine &amp; Model Selector<\/i><\/b><b>: <\/b>both the engine and the modeler are visual representations of the backend work of Jetson. They are two R-shiny based applications to interpret different elements:\n<ol>\n<li><i>Model Selector (a.k.a. modeler)<\/i>: the modeler is a R-shiny app that contains some of the performance metrics of the models after the machine has made its new predictions calculations. The performance metrics are both statistical and computer-science based metrics and help to select new models every month, given that new inputs of past data will change the output of the following month (feedback loop). Even though the models are fixed (static modeling), the output for every month changed according to the different variable weights, and therefore the need to evaluate the performance of the machine\u2019s new calculations.<\/li>\n<\/ol>\n<\/li>\n<\/ol>\n<p>Model selector then portrays in a visual way the following performance metrics of<\/p>\n<p>the model\u2019s new outputs:<\/p>\n<ol>\n<li style=\"list-style-type: none;\">\n<ol>\n<li style=\"list-style-type: none;\">\n<ol>\n<li><i>Statistics:\u00a0 <\/i>Akaike Information Criterion (AIC), Bayesian Information Criterion (BIC), and a simple Pearson Correlation between machine predicts vs. actual arrivals, for the last 20-months of data available.<\/li>\n<li><i>Computer science: <\/i>we measure three variables in this component\n<ol>\n<li>One is the percentage of [machine] correct classification (PCC), which is a measure to take the proportion of correctly \u201cpredicted\u201d months vs. the actual arrivals.<\/li>\n<li>The second one is the occurrence of top \u201cinfluencers\u201d, coming from the <a href=\"https:\/\/docs.google.com\/spreadsheets\/d\/1O2ZpYasL0O0DWYMCslv9N0s23Itk_EKUjexCbv_3jzU\/edit#gid=0\">sensitivity map<\/a> of the most repeated variables in the output model function, to be able to identify.<\/li>\n<li>And the third, is the Multivariate Imputation by Chained Equations (MICE) algorithm, with a random seed of 50% of the data.<\/li>\n<\/ol>\n<\/li>\n<\/ol>\n<\/li>\n<\/ol>\n<\/li>\n<\/ol>\n<p><i>Figure 2: <\/i>Model Selector app<\/p>\n<p>Model Selection (human element):<\/p>\n<ol>\n<li style=\"list-style-type: none;\">\n<ol>\n<li><i>Engine:<\/i>\u00a0 the engine is the output visualization of the models. It is composed by the 18 regions of Somalia, plus Dollo Ado region (southern border, Ethiopia). It portrays the 3 out-performing models in a graph &#8211; based on the metrics mentioned above &#8211; per month per region. The engine changes the models according to the new monthly predictions.<\/li>\n<\/ol>\n<\/li>\n<\/ol>\n<p><i>Figure 3: Engine app<\/i><\/p>\n<ol>\n<li><b><i>Map<\/i><\/b>: the final visualization of the predictions and the historical predictions per region. It portrays the level of influx in a certain region with the following thresholds established by UNHCR Somalia operation:\n<ol>\n<li><i>Low<\/i>: if the region experiences a normal influxing, averaging the 3 past months,<\/li>\n<li><i>Medium<\/i>: averaging the past 3 months, if the particular region experiences an increase of influx up to 50% and less than 99% (less than the double).<\/li>\n<li><i>High:<\/i> if the region experiences an increase of population influx equal to 100% (double) or more, averaging the past 3 months.<\/li>\n<\/ol>\n<\/li>\n<\/ol>\n<p>Having the historical predictions also give an overall evaluation of the different models used to understand for example if there are regions whose movement is due to seasonality or modus vivendi (e.g. pastoralists) or if there is a nexus between conflict, climate and displacement, to be able to predict it. This is the work we are expanding through our research partners: <a href=\"https:\/\/www.unglobalpulse.org\/\">UN Global Pulse<\/a> and <a href=\"https:\/\/www.unglobalpulse.org\/\">HRBDT Centre of the University of Essex.\u00a0<\/a><\/p>\n<p><i>Figure 5: Predictions, Map\u00a0<\/i><\/p>\n<p><i>Figure 6: Historical predictions, Mudug Region<\/i><\/p>\n<p><b>Measuring success:\u00a0<\/b><\/p>\n<ul>\n<li>Put by the operation, if the machine<\/li>\n<\/ul>\n","section_style":"off_grey","section_class":""},{"acf_fc_layout":"text_section","title":"Technical Resources","text":"<p>Short introduction (1 &#8211; 2 sentences)<\/p>\n<ul>\n<li>Format: table (gsheet) &#8211; <a href=\"https:\/\/docs.google.com\/spreadsheets\/d\/1O2ZpYasL0O0DWYMCslv9N0s23Itk_EKUjexCbv_3jzU\/edit#gid=0\">Sensitivity Analysis<\/a><\/li>\n<li>Format: table (gsheet) &#8211;\u00a0 <a href=\"https:\/\/docs.google.com\/spreadsheets\/d\/1qZsXGnEBaSIlhL8cfZhxswBmYN2E_VemRbYyqQTc-C0\/edit#gid=932134853\">Performance Evaluation<\/a><\/li>\n<li>Format : PDF\u00a0 &#8211; White Paper (under construction)<\/li>\n<li>Format: PDF &#8211;\u00a0 Intro to White paper<\/li>\n<li>Format: text &#8211; <a href=\"https:\/\/docs.google.com\/document\/d\/1R5FS1NdL6vHq9J7Iu-Bjpg6MlSOFjW3yGis10-uyPaw\/edit\">Recipes\u00a0<\/a><\/li>\n<li>Format: table (gsheets) &#8211; <a href=\"https:\/\/docs.google.com\/spreadsheets\/offline\/edit?ouid=u9da9aea52febd100&amp;uc=en&amp;jobset=prod&amp;ftrack=1&amp;docosJobset=prod#id%3D15qJuLfwCEf65D82EY9td8DdCPK3prFi2qyMQ-MhsOdU%26cm%3Dd%26new%3Dfalse%26ouri%3Dhttps%253A%252F%252Fdocs.google.com%252Fspreadsheets%252Fu%252F1%252Fd%252F15qJuLfwCEf65D82EY9td8DdCPK3prFi2qyMQ-MhsOdU%252Fedit%2523gid%253D1472609436%26dl%3Den_US%26fbns%3D1563548527878%26csr%3D1\">historical decisions on models\u00a0<\/a><\/li>\n<li>Format: medium link text (glossary)<\/li>\n<\/ul>\n","section_style":"white","section_class":""},{"acf_fc_layout":"code_section","title":"Jetson Models","text":"<div class=\"content\">\n<h3>About the map<\/h3>\n<p><span style=\"font-weight: 400;\">The map was requested by UNHCR\u2019s operation in Somalia as a red-light style of visualization. It portrays the level of critically for movement. Moderate means Jetson is predicting the arrivals of next month within the range of the average arrivals of the past 3 months. High means the machine prediction of arrivals \u00a0is higher than the average but less than 100% increase in arrivals, and Critical means is double the average (more than a 100% increase).<\/span><\/p>\n<\/div>\n","code":"            <a class=\"btn\" href=\"https:\/\/unhcrinnovation.shinyapps.io\/Somalia\/\" target=\"_blank\"><span class=\"ti-panel\"><\/span>\r\n                Explore the engine<\/a>\r\n\r\n            <button class=\"btn\" id=\"show_map\">\r\n                <span class=\"ti-location-pin\"><\/span> View map\r\n            <\/button>\r\n\r\n\r\n            <!-- map -->\r\n            <div class=\"map-container\">\r\n                <div class=\"map-title\">\r\n                    <h2><\/h2>\r\n                <\/div>\r\n                <div id=\"regions_div\"><\/div>\r\n                <div class=\"warning\">\r\n                    <span class=\"ti-flag-alt-2\"><\/span> Warning: Map data is not up to date\r\n                <\/div>\r\n                <div class=\"key\">\r\n                    <h4>Predicted Displacement<\/h4>\r\n                    <div class=\"labels\">\r\n                        <span class=\"moderate\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Is the average of arrivals or less than the past 3 months' values\">1\r\n                            - Moderate<\/span>\r\n                        <span class=\"high\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Is higher\/average + half OR 3\/4 higher than the average arrivals past 3 months\">2\r\n                            - High<\/span>\r\n                        <span class=\"critical\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Is [critically] higher\/double than the average arrivals of past 3 months\">3\r\n                            - Critical<\/span>\r\n                    <\/div>\r\n                    <div class=\"colours\">\r\n                        <span class=\"moderate\"><\/span>\r\n                        <span class=\"high\"><\/span>\r\n                        <span class=\"critical\"><\/span>\r\n                    <\/div>\r\n                <\/div>\r\n            <\/div>","section_style":"light_blue","section_class":""}]},"_links":{"self":[{"href":"https:\/\/www.unhcr.org\/innovation\/wp-json\/wp\/v2\/pages\/29889"}],"collection":[{"href":"https:\/\/www.unhcr.org\/innovation\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.unhcr.org\/innovation\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.unhcr.org\/innovation\/wp-json\/wp\/v2\/users\/10"}],"replies":[{"embeddable":true,"href":"https:\/\/www.unhcr.org\/innovation\/wp-json\/wp\/v2\/comments?post=29889"}],"version-history":[{"count":4,"href":"https:\/\/www.unhcr.org\/innovation\/wp-json\/wp\/v2\/pages\/29889\/revisions"}],"predecessor-version":[{"id":29993,"href":"https:\/\/www.unhcr.org\/innovation\/wp-json\/wp\/v2\/pages\/29889\/revisions\/29993"}],"wp:attachment":[{"href":"https:\/\/www.unhcr.org\/innovation\/wp-json\/wp\/v2\/media?parent=29889"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}